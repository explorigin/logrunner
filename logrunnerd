#!/usr/bin/env python
#########################################################################
##
##  LogRunner
##  Copyright (C) 2013 Jacob Cook
##  jacob@jcook.cc
##
#########################################################################

import sys
import getopt
import os
import ConfigParser

from logrunner.daemon import Daemon

class LRDaemon(Daemon):
    def run(self):
        from logrunner.logrunner import LogRunner
        runner = LogRunner(self.config_file, 'tofile')
        runner.install()
        runner.watch()


def usage():
    print """
LOGRUNNER (c) 2013 Jacob Cook
Usage: logrunnerd [options]
Options:
    -c, --config <file> - Use given config file instead of default
    -d, --start         - Run in background (daemon mode)
    -r, --restart       - Restart daemon
    -s, --stop          - Stop daemon
    -h, --help          - Show options
    """


if __name__ == '__main__':
    reload(sys)
    sys.setdefaultencoding('utf-8')
    sys.dont_write_bytecode = True

    config_file = ''

    try:
        opts, args = getopt.getopt(sys.argv[1:], 'hc:drsv', ['help', 'config=', 'start', 'stop', 'restart'])
    except getopt.GetoptError, e:
        print str(e)
        usage()
        sys.exit(2)

    action = 'run'

    for o, a in opts:
        if o in ('-h', '--help'):
            usage()
            sys.exit(0)
        elif o in ('-c', '--config'):
            if os.path.isfile(a):
                config_file = a
        elif o in ('-d', '--start'):
            action = 'start'
        elif o in ('-r', '--restart'):
            action = 'restart'
        elif o in ('-s', '--stop'):
            action = 'stop'

    if action == 'run':
        from logrunner.logrunner import LogRunner
        runner = LogRunner(config_file, 'stdout')
        runner.install()
        runner.watch()

    else:
        lrd = LRDaemon('/var/run/logrunner.pid',stdout='/var/log/logrunner.log')
        lrd.config_file = config_file

        if 'start' == action:
            lrd.start()
        elif 'stop' == action:
            lrd.stop()
        elif 'restart' == action:
            lrd.restart()
        else:
            usage()
            sys.exit(2)

    sys.exit(0)
